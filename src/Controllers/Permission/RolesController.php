<?php
/**
 * Larfree Api类
 * @author blues
 */

namespace LarfreePermission\Controllers\Permission;

use Iblues\AnnotationTestUnit\Annotation as ATU;
use Illuminate\Http\Request;
use Larfree\Controllers\ApisController as Controller;
use LarfreePermission\Services\Permission\PermissionRolesService;

class RolesController extends Controller
{
    /**
     * @var PermissionRolesService
     */
    public $service;

    public function __construct(PermissionRolesService $service)
    {
        $this->service = $service;
        parent::__construct();
    }

    /**
     * @param Request $request
     * @return mixed
     * @throws \Exception
     * @author Blues
     * @ATU\Api(
     * )
     */
    public function index(Request $request)
    {
        return parent::index($request); // TODO: Change the autogenerated stub
    }

    /**
     * @param Request $request
     * @return mixed
     * @throws \Exception
     * @author Blues
     * @ATU\Api(
     *     @ATU\Request({"guard_name":"admin","name":"测试","nav":{1},"api":{}}),
     *     @ATU\Assert("assertDatabaseHas",{"permission_permissions",{"target_id":1}}),
     *     @ATU\Assert("assertDatabaseHas",{"permission_roles",{"name":"测试"}}),
     *     @ATU\Assert("assertDatabaseHas",{"permission_role_has_permissions",{"role_id":@ATU\GetResponse("data.id")}})
     * )
     */
    public function store(Request $request)
    {
        return parent::store($request); // TODO: Change the autogenerated stub
    }

    /**
     * @param Request $request
     * @param $id
     * @return mixed
     * @throws \Exception
     * @author Blues
     *
     * @ATU\Api(
     *     path="latest",
     *     @ATU\Request({"name":"测试2","guard_name":"admin","nav":{1},"api":{}}),
     *     @ATU\Assert("assertDatabaseHas",{"permission_permissions",{"target_id":1}}),
     *     @ATU\Assert("assertDatabaseHas",{"permission_roles",{"name":"测试2"}}),
     *     @ATU\Assert("assertDatabaseHas",{"permission_role_has_permissions",{"role_id":@ATU\GetResponse("data.id")}})
     * )
     *
     */
    public function update(Request $request, $id)
    {
        return parent::update($request, $id);
    }

}
